/* nodeStyles.css */
/* Styling specifically for nodes in the pipeline builder */

/* Base node styling */
.node-container {
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-md);
  padding: 0;
  background-color: var(--color-bg-secondary);
  min-width: 200px;
  max-width: 100%;
  width: 250px;
  transition: box-shadow var(--transition-speed) ease, transform var(--transition-speed) ease;
  font-size: var(--font-size-md);
  overflow: visible;
}

.node-container:hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-2px);
}

.node-header {
  padding: var(--space-sm) var(--space-md);
  border-top-left-radius: var(--radius-md);
  border-top-right-radius: var(--radius-md);
  font-weight: 600;
  color: var(--color-text-primary);
  border-bottom: 1px solid var(--color-border);
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.node-content {
  padding: var(--space-md);
  overflow: hidden;
  width: 100%;
  box-sizing: border-box;
}

.node-content label {
  display: block;
  margin-bottom: var(--space-xs);
  color: var(--color-text-secondary);
  font-size: var(--font-size-sm);
}

.node-content input,
.node-content select,
.node-content textarea {
  width: 100%;
  margin-bottom: var(--space-sm);
  max-width: 100%;
  box-sizing: border-box;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Fix for input field overflow */
.node-content input[type="text"],
.node-content input[type="number"],
.node-content input[type="url"] {
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  padding: 6px 8px;
  font-size: var(--font-size-sm);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  background-color: var(--color-bg-primary);
}

/* Fix for select dropdown overflow */
.node-content select {
  width: 100%;
  max-width: 100%;
  box-sizing: border-box;
  padding: 6px 8px;
  padding-right: 24px; /* Space for the dropdown arrow */
  font-size: var(--font-size-sm);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  background-color: var(--color-bg-primary);
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg fill='black' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
  background-repeat: no-repeat;
  background-position: right 4px center;
}

/* Fix for method and endpoint display */
.node-api input[type="text"],
.node-api input[type="url"] {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Node type-specific styling */
.node-input .node-header {
  background-color: var(--node-input-color);
}

.node-output .node-header {
  background-color: var(--node-output-color);
}

.node-llm .node-header {
  background-color: var(--node-llm-color);
}

.node-text .node-header {
  background-color: var(--node-text-color);
}

.node-math .node-header {
  background-color: var(--node-math-color);
}

.node-api .node-header {
  background-color: var(--node-api-color);
}

.node-filter .node-header {
  background-color: var(--node-filter-color);
}

.node-transform .node-header {
  background-color: var(--node-transform-color);
}

.node-delay .node-header {
  background-color: var(--node-delay-color);
}

/* Handle styling */
.react-flow__handle {
  width: 10px;
  height: 10px;
  background-color: white;
  border: 2px solid #555;
  border-radius: 50%;
  transition: all var(--transition-speed) ease;
}

.react-flow__handle-left {
  border-color: var(--handle-input-color);
  left: -6px;
}

.react-flow__handle-right {
  border-color: var(--handle-output-color);
  right: -6px;
}

.react-flow__handle:hover {
  transform: scale(1.3);
  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.3);
}

/* Small visual indicator to help differentiate input vs output handles */
.react-flow__handle:before {
  content: '';
  position: absolute;
  top: 50%;
  width: 6px;
  height: 2px;
  background-color: currentColor;
  transform: translateY(-50%);
}

.react-flow__handle-left:before {
  right: 100%;
  margin-right: 3px;
}

.react-flow__handle-right:before {
  left: 100%;
  margin-left: 3px;
}

/* Selected node styling */
.react-flow__node.selected .node-container {
  box-shadow: 0 0 0 2px var(--color-accent);
}

/* For edge styling */
.react-flow__edge-path {
  stroke: var(--color-accent);
  stroke-width: 2;
  transition: stroke-width var(--transition-speed) ease;
}

.react-flow__edge:hover .react-flow__edge-path {
  stroke-width: 3;
  stroke: var(--color-accent);
}

/* For the connecting line while dragging a new connection */
.react-flow__connection-path {
  stroke: var(--color-accent);
  stroke-width: 2;
  stroke-dasharray: 5;
}

/* Auto-resizing TextNode styling */
.auto-resizing-node {
  transition: width var(--transition-speed) ease, height var(--transition-speed) ease;
}

/* Enhanced Text Node Styling */
.text-node-content {
  width: 100%;
}

.text-node-content label {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--color-text-secondary);
}

/* Improved textarea styling */
.textarea-container {
  position: relative;
  margin-bottom: var(--space-sm);
  width: 100%;
  border-radius: var(--radius-md);
  overflow: hidden;
}

.text-node-content textarea {
  min-height: 60px;
  font-family: 'Roboto', 'Segoe UI', sans-serif;
  padding: 12px 14px;
  line-height: 1.6;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  background-color: rgba(0, 0, 0, 0.02);
  color: var(--color-text-primary);
  width: 100%;
  box-sizing: border-box;
  font-size: 14px;
  transition: all var(--transition-speed) ease;
  white-space: pre-wrap;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.05);
  letter-spacing: 0.01em;
}

/* Variable style enhancements */
.text-node-content textarea.has-variables {
  background-image: linear-gradient(to bottom, transparent, transparent);
  color: var(--color-text-primary);
}

.text-node-content textarea::selection {
  background-color: rgba(79, 70, 229, 0.2);
}

.text-node-content textarea:focus {
  outline: none;
  border-color: var(--color-accent);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05), 0 0 0 3px var(--color-accent-light);
  background-color: var(--color-bg-secondary);
}

/* Enhanced styling for textarea focus state */
.textarea-container.focused textarea {
  border-color: var(--color-accent);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05), 0 0 0 3px var(--color-accent-light);
  background-color: var(--color-bg-secondary);
}

/* Enhanced variable listing */
.variable-list {
  margin-top: var(--space-sm);
  padding: 10px 12px;
  background-color: rgba(0, 0, 0, 0.04);
  border-radius: var(--radius-sm);
  border-left: 3px solid var(--color-accent);
  transition: all var(--transition-speed) ease;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.03);
}

.variable-list:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.variable-list small:first-child {
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--color-text-secondary);
  letter-spacing: 0.02em;
}

/* Beautiful variable chips */
.variable-item {
  font-size: 12px;
  margin: 3px 3px 3px 0;
  padding: 4px 10px;
  background-color: var(--color-accent-light);
  border-radius: 12px;
  color: var(--color-accent);
  display: inline-block;
  border: 1px solid var(--color-accent);
  cursor: default;
  font-weight: 500;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  transition: all var(--transition-speed) ease;
  user-select: none;
}

.variable-item:hover {
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  background-color: var(--color-accent);
  color: white;
}

/* Variable chips container */
.variable-chips {
  display: flex;
  flex-wrap: wrap;
  gap: 6px;
  margin-bottom: 8px;
}

/* Variable syntax highlight effect */
.text-node-content textarea.has-variables::selection {
  background-color: rgba(79, 70, 229, 0.3);
}

/* Highlight animation for newly detected variables */
@keyframes newVariablePulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

.variable-item:last-child {
  animation: newVariablePulse 0.6s ease-in-out;
}

/* Connected variable styling */
.react-flow__edge[data-testid*="var-"] .react-flow__edge-path {
  stroke: var(--color-accent);
  stroke-width: 2.5;
}

/* Additional styling for TextNode */
.node-text {
  transition: width 0.3s cubic-bezier(0.23, 1, 0.32, 1), 
              height 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

/* Improved textarea styling with subtle pattern background */
.text-node-content textarea {
  background-image: linear-gradient(0deg, 
    rgba(63, 81, 181, 0.03) 1px, 
    transparent 1px
  );
  background-size: 100% 24px;
  padding-top: 13px;      /* Align with the background lines */
  line-height: 24px;
  background-attachment: local;
}

/* Variable help text styling */
.variable-help {
  display: block;
  margin-top: 10px;
  font-style: italic;
  font-size: 11px;
  color: var(--color-text-secondary);
  opacity: 0.8;
  padding-left: 2px;
  letter-spacing: 0.01em;
}

/* Enhanced tooltip for variable handles */
.react-flow__handle[id*="var-"] {
  position: relative;
  width: 10px;
  height: 10px;
  background-color: white;
  border: 2px solid var(--color-accent);
  transition: all var(--transition-speed) ease;
}

.react-flow__handle[id*="var-"]:hover {
  transform: scale(1.3);
  box-shadow: 0 0 0 4px var(--color-accent-light);
  background-color: var(--color-accent-light);
}

.react-flow__handle[id*="var-"]::before {
  content: '';
  position: absolute;
  left: -15px;
  top: 50%;
  transform: translateY(-50%);
  width: 12px;
  height: 2px;
  background-color: var(--color-accent);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

/* Better handle tooltips */
.react-flow__handle[id*="var-"]::after {
  content: attr(data-tooltip);
  position: absolute;
  left: -8px;
  top: -30px;
  font-size: 11px;
  background-color: var(--color-accent);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  opacity: 0;
  transform: translateX(-50%) translateY(5px);
  transition: opacity 0.3s ease, transform 0.3s ease;
  pointer-events: none;
  white-space: nowrap;
  font-weight: 500;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  z-index: 10;
  letter-spacing: 0.01em;
}

.react-flow__handle[id*="var-"]:hover::after {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
}

/* Apply variable highlighting in text */
@keyframes variableHighlightPulse {
  0% { box-shadow: 0 0 0 0 rgba(79, 70, 229, 0.4); }
  70% { box-shadow: 0 0 0 6px rgba(79, 70, 229, 0); }
  100% { box-shadow: 0 0 0 0 rgba(79, 70, 229, 0); }
}

.text-node-content textarea.has-variables {
  background-color: rgba(0, 0, 0, 0.01);
  /* Text will be styled by content highlighting inside the node component */
}

/* Auto-resize animation smoothing */
.react-flow__node.auto-resizing-node {
  transition: width 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), 
              height 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

/* Variable handle styling */
.react-flow__handle.variable-handle {
  background-color: var(--color-bg-secondary);
  border: 2px solid var(--color-accent);
  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

.react-flow__handle.variable-handle:hover {
  transform: scale(1.4);
  background-color: var(--color-accent-light);
}

/* Connected variable handle */
.react-flow__handle.variable-handle.connecting {
  background-color: var(--color-accent);
  border-color: var(--color-accent);
  box-shadow: 0 0 0 3px var(--color-accent-light);
}

/* LLM Node specific styling */
.input-labels {
  margin-top: var(--space-sm);
  padding: 8px 10px;
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: var(--radius-sm);
  color: var(--color-text-primary); /* Uses the theme-aware text color */
  border-left: 3px solid var(--node-llm-color);
}

.input-labels div {
  font-weight: 500;
  margin-bottom: 4px;
  font-size: var(--font-size-sm);
  color: var(--color-text-primary); /* Theme-aware color */
}

.input-labels small {
  display: block;
  margin-left: 8px;
  margin-bottom: 2px;
  color: var(--color-text-secondary); /* Theme-aware secondary color */
}

/* Dark mode specific styling for input labels */
html.dark-mode .input-labels {
  background-color: rgba(255, 255, 255, 0.05);
}

/* Delete button styling */
.delete-button {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.8);
  color: #ff3b30;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  line-height: 0;
  padding-bottom: 1px;  /* Fine-tune vertical centering */
  text-align: center;
  transition: all var(--transition-speed) ease;
  opacity: 0.8;
  box-shadow: var(--shadow-sm);
  margin-left: var(--space-sm);
}

.delete-button:hover {
  background-color: #ff3b30;
  color: white;
  opacity: 1;
  transform: scale(1.1);
}

/* Dark mode styling for delete button */
html.dark-mode .delete-button {
  background-color: rgba(50, 50, 50, 0.8);
  color: #ff453a;
}

html.dark-mode .delete-button:hover {
  background-color: #ff453a;
  color: #1c1c1e;
}

/* Transform node specific fixes */
.node-transform textarea,
.node-transform input {
  font-family: 'Roboto Mono', monospace, 'Courier New', Courier;
  font-size: 13px;
  white-space: pre-wrap;
  word-break: break-all;
  overflow-wrap: break-word;
}

/* Filter node specific fixes */
.node-filter input {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

/* Delay node specific fix */
.node-delay input[type="number"] {
  padding-right: 8px;
}

/* Responsive node styling */
@media screen and (max-width: 1200px) {
  .node-container {
    width: 230px;
  }
}

@media screen and (max-width: 992px) {
  .node-container {
    width: 220px;
  }
  
  .node-content input,
  .node-content select,
  .node-content textarea {
    font-size: 13px;
  }
}

@media screen and (max-width: 768px) {
  .node-container {
    width: 210px;
    min-width: 180px;
  }
}
