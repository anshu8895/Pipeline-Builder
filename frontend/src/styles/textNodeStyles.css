/* textNodeStyles.css */
/* Custom styling for the TextNode component */

/* TextNode specific container enhancements */
.node-text {
  transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.node-text .node-header {
  background-color: var(--node-text-color);
  border-bottom: 2px solid rgba(0, 0, 0, 0.1);
}

/* Enhanced textarea appearance */
.text-node-content textarea {
  font-family: 'Roboto Mono', 'Courier New', monospace;
  padding: 12px 14px;
  line-height: 1.6;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
  background-color: rgba(255, 255, 255, 0.8);
  color: var(--color-text-primary);
  width: 100%;
  box-sizing: border-box;
  font-size: 13px;
  transition: all var(--transition-speed) ease;
  white-space: pre-wrap;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
}

/* Dark mode textarea styling */
html.dark-mode .text-node-content textarea {
  background-color: rgba(31, 41, 55, 0.8);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

/* Variable pattern detection */
.text-node-content textarea.has-variables {
  background-image: linear-gradient(
    to right, 
    transparent, 
    rgba(79, 70, 229, 0.03) 10%, 
    transparent 90%
  );
}

/* Enhanced input handles for variables */
.react-flow__handle[id*="var-"] {
  transition: transform 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Variable chip enhancements */
.variable-item {
  position: relative;
  overflow: hidden;
}

.variable-item:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    135deg, 
    transparent 0%, 
    transparent 40%,
    rgba(255, 255, 255, 0.15) 40%, 
    rgba(255, 255, 255, 0.15) 60%,
    transparent 60%,
    transparent 100%
  );
  background-size: 300% 300%;
  background-position: 0% 0%;
  transition: background-position 0.4s ease;
}

.variable-item:hover:after {
  background-position: 100% 100%;
}

/* Visual feedback when typing variables */
@keyframes variableTyping {
  0% { border-color: var(--color-accent); }
  50% { border-color: transparent; }
  100% { border-color: var(--color-accent); }
}

.textarea-container.focused textarea.has-variables {
  animation: variableTyping 2s infinite;
  animation-play-state: running;
}

/* Add shine effect to variable list when variables change */
@keyframes shine {
  0% {
    background-position: -100px;
  }
  60% {
    background-position: 240px;
  }
  100% {
    background-position: 240px;
  }
}

.variable-list {
  position: relative;
  overflow: hidden;
}

.variable-list:after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: 200px 100%;
  background-repeat: no-repeat;
  background-position: -100px;
}

/* Apply shine animation when variables are detected/updated */
.text-node-content textarea.has-variables:focus + .variable-list:after {
  animation: shine 2s ease forwards;
}

/* Animation when new variables are detected */
@keyframes variableAdded {
  0% { background-color: rgba(79, 70, 229, 0.05); }
  50% { background-color: rgba(79, 70, 229, 0.2); }
  100% { background-color: rgba(79, 70, 229, 0.05); }
}

.text-node-content textarea.variable-added {
  animation: variableAdded 1s ease;
}

/* Improve variable visualization within the textarea */
.variable-added + .variable-list {
  animation: shine 1.5s ease forwards;
}

/* Better contrast for variables in dark mode */
html.dark-mode .variable-item {
  background-color: var(--color-accent-light);
  border-color: var(--color-accent);
  color: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

/* Responsive design adjustments for smaller nodes */
@media (max-width: 300px) {
  .variable-list {
    padding: 8px;
  }
  
  .variable-item {
    font-size: 10px;
    padding: 3px 6px;
  }
  
  .text-node-content textarea {
    font-size: 12px;
    padding: 10px 12px;
  }
}

/* Add a faint grid pattern to textarea for better text alignment */
.text-node-content textarea {
  background-image: 
    linear-gradient(to right, rgba(0, 0, 0, 0.02) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(0, 0, 0, 0.02) 1px, transparent 1px);
  background-size: 20px 20px;
  background-attachment: local;
}

html.dark-mode .text-node-content textarea {
  background-image: 
    linear-gradient(to right, rgba(255, 255, 255, 0.03) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
}

/* Visual feedback for variable typing state */
.textarea-container.typing-variable textarea {
  border-color: var(--color-accent);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05), 0 0 0 2px rgba(79, 70, 229, 0.2);
}

.text-node-content textarea.typing-variable {
  color: var(--color-accent);
}

/* Node highlight during variable editing */
.node-container.variable-editing {
  box-shadow: 0 0 0 2px var(--color-accent), var(--shadow-md);
}

/* Enhanced handle styling during variable typing */
.variable-editing .react-flow__handle[id*="var-"] {
  background-color: var(--color-accent-light);
  border-color: var(--color-accent);
  transform: scale(1.2);
}

/* Improved textarea cursor */
.text-node-content textarea {
  caret-color: var(--color-accent);
  caret-shape: bar;
}

/* Animated border for typing-variable state */
@keyframes pulseBorder {
  0% { border-color: var(--color-accent); }
  50% { border-color: var(--color-accent-light); }
  100% { border-color: var(--color-accent); }
}

.textarea-container.typing-variable textarea {
  animation: pulseBorder 1.5s infinite;
}

/* Additional styling for better visual hierarchy */
.text-node-content label {
  font-weight: 500;
  color: var(--color-text-secondary);
  display: flex;
  flex-direction: column;
  gap: 6px;
}

/* Enhanced variable list header */
.variable-list-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
}

.variable-count {
  background-color: var(--color-accent);
  color: white;
  font-size: 11px;
  font-weight: 500;
  padding: 2px 6px;
  border-radius: 10px;
  min-width: 18px;
  text-align: center;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  display: inline-block;
}

/* Interactive variable items */
.variable-item {
  cursor: pointer;
}

.variable-item:active {
  transform: scale(0.95);
}

/* Context-aware variable highlighting */
.text-node-content textarea::selection {
  background-color: var(--color-accent-light);
  color: var(--color-accent);
}

/* Improved placeholder text */
.text-node-content textarea::placeholder {
  color: rgba(0, 0, 0, 0.35);
  font-style: italic;
}

html.dark-mode .text-node-content textarea::placeholder {
  color: rgba(255, 255, 255, 0.25);
}

/* Rich text feel for the textarea */
.text-node-content textarea {
  tab-size: 2;
  -moz-tab-size: 2;
  text-shadow: 0 0.1px 0 rgba(0, 0, 0, 0.1);
}

/* Visual indicator that variable items are clickable */
.variable-item:hover {
  background-color: var(--color-accent);
  color: white;
  transform: translateY(-1px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
}

/* Keyboard shortcut info styling */
.variable-help-container {
  margin-top: 10px;
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.keyboard-shortcut-info {
  font-size: 11px;
  color: var(--color-accent);
  opacity: 0.8;
  display: flex;
  align-items: center;
  gap: 5px;
  font-weight: 500;
  transition: opacity 0.2s ease;
}

.keyboard-shortcut-info:before {
  content: '⌨️';
  font-size: 11px;
}

.keyboard-shortcut-info:hover {
  opacity: 1;
}

/* Responsive layout for variable help */
@media (max-width: 320px) {
  .variable-help-container {
    font-size: 10px;
  }
  
  .keyboard-shortcut-info {
    font-size: 10px;
  }
}
